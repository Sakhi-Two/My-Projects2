#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AtEaseWCF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ateaseData")]
	public partial class AteaseDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertManager(Manager instance);
    partial void UpdateManager(Manager instance);
    partial void DeleteManager(Manager instance);
    partial void InsertMerchant(Merchant instance);
    partial void UpdateMerchant(Merchant instance);
    partial void DeleteMerchant(Merchant instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertQuotation(Quotation instance);
    partial void UpdateQuotation(Quotation instance);
    partial void DeleteQuotation(Quotation instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    #endregion
		
		public AteaseDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ateaseDataConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AteaseDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AteaseDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AteaseDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AteaseDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<Manager> Managers
		{
			get
			{
				return this.GetTable<Manager>();
			}
		}
		
		public System.Data.Linq.Table<Merchant> Merchants
		{
			get
			{
				return this.GetTable<Merchant>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Quotation> Quotations
		{
			get
			{
				return this.GetTable<Quotation>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ISBN;
		
		private string _Book_Name;
		
		private string _Book_Edition;
		
		private string _Book_Author;
		
		private string _Image;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Quotation> _Quotations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnBook_NameChanging(string value);
    partial void OnBook_NameChanged();
    partial void OnBook_EditionChanging(string value);
    partial void OnBook_EditionChanged();
    partial void OnBook_AuthorChanging(string value);
    partial void OnBook_AuthorChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public Book()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Name", DbType="VarChar(MAX)")]
		public string Book_Name
		{
			get
			{
				return this._Book_Name;
			}
			set
			{
				if ((this._Book_Name != value))
				{
					this.OnBook_NameChanging(value);
					this.SendPropertyChanging();
					this._Book_Name = value;
					this.SendPropertyChanged("Book_Name");
					this.OnBook_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Edition", DbType="VarChar(MAX)")]
		public string Book_Edition
		{
			get
			{
				return this._Book_Edition;
			}
			set
			{
				if ((this._Book_Edition != value))
				{
					this.OnBook_EditionChanging(value);
					this.SendPropertyChanging();
					this._Book_Edition = value;
					this.SendPropertyChanged("Book_Edition");
					this.OnBook_EditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Author", DbType="VarChar(MAX)")]
		public string Book_Author
		{
			get
			{
				return this._Book_Author;
			}
			set
			{
				if ((this._Book_Author != value))
				{
					this.OnBook_AuthorChanging(value);
					this.SendPropertyChanging();
					this._Book_Author = value;
					this.SendPropertyChanged("Book_Author");
					this.OnBook_AuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Product", Storage="_Products", ThisKey="ISBN", OtherKey="ISBN")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Quotation", Storage="_Quotations", ThisKey="ISBN", OtherKey="ISBN")]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _feed_ID;
		
		private System.Nullable<int> _Merchant_ID;
		
		private string _Stu_Num;
		
		private System.Nullable<int> _Rating;
		
		private string _Reviews;
		
		private System.Nullable<int> _IsRated;
		
		private EntityRef<Merchant> _Merchant;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfeed_IDChanging(int value);
    partial void Onfeed_IDChanged();
    partial void OnMerchant_IDChanging(System.Nullable<int> value);
    partial void OnMerchant_IDChanged();
    partial void OnStu_NumChanging(string value);
    partial void OnStu_NumChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnReviewsChanging(string value);
    partial void OnReviewsChanged();
    partial void OnIsRatedChanging(System.Nullable<int> value);
    partial void OnIsRatedChanged();
    #endregion
		
		public Feedback()
		{
			this._Merchant = default(EntityRef<Merchant>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feed_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int feed_ID
		{
			get
			{
				return this._feed_ID;
			}
			set
			{
				if ((this._feed_ID != value))
				{
					this.Onfeed_IDChanging(value);
					this.SendPropertyChanging();
					this._feed_ID = value;
					this.SendPropertyChanged("feed_ID");
					this.Onfeed_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merchant_ID", DbType="Int")]
		public System.Nullable<int> Merchant_ID
		{
			get
			{
				return this._Merchant_ID;
			}
			set
			{
				if ((this._Merchant_ID != value))
				{
					if (this._Merchant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMerchant_IDChanging(value);
					this.SendPropertyChanging();
					this._Merchant_ID = value;
					this.SendPropertyChanged("Merchant_ID");
					this.OnMerchant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Num", DbType="VarChar(50)")]
		public string Stu_Num
		{
			get
			{
				return this._Stu_Num;
			}
			set
			{
				if ((this._Stu_Num != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStu_NumChanging(value);
					this.SendPropertyChanging();
					this._Stu_Num = value;
					this.SendPropertyChanged("Stu_Num");
					this.OnStu_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviews", DbType="VarChar(MAX)")]
		public string Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				if ((this._Reviews != value))
				{
					this.OnReviewsChanging(value);
					this.SendPropertyChanging();
					this._Reviews = value;
					this.SendPropertyChanged("Reviews");
					this.OnReviewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRated", DbType="Int")]
		public System.Nullable<int> IsRated
		{
			get
			{
				return this._IsRated;
			}
			set
			{
				if ((this._IsRated != value))
				{
					this.OnIsRatedChanging(value);
					this.SendPropertyChanging();
					this._IsRated = value;
					this.SendPropertyChanged("IsRated");
					this.OnIsRatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Merchant_Feedback", Storage="_Merchant", ThisKey="Merchant_ID", OtherKey="Merchant_ID", IsForeignKey=true)]
		public Merchant Merchant
		{
			get
			{
				return this._Merchant.Entity;
			}
			set
			{
				Merchant previousValue = this._Merchant.Entity;
				if (((previousValue != value) 
							|| (this._Merchant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Merchant.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Merchant.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._Merchant_ID = value.Merchant_ID;
					}
					else
					{
						this._Merchant_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Merchant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Feedback", Storage="_Student", ThisKey="Stu_Num", OtherKey="Stu_Num", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._Stu_Num = value.Stu_Num;
					}
					else
					{
						this._Stu_Num = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manager")]
	public partial class Manager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Manager_ID;
		
		private string _Man_Name;
		
		private string _Man_Surname;
		
		private string _Man_Email;
		
		private string _Man_Contact;
		
		private string _Man_Password;
		
		private string _Man_Image;
		
		private System.Nullable<int> _IsActive;
		
		private System.Nullable<int> _UserType;
		
		private EntitySet<Merchant> _Merchants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManager_IDChanging(int value);
    partial void OnManager_IDChanged();
    partial void OnMan_NameChanging(string value);
    partial void OnMan_NameChanged();
    partial void OnMan_SurnameChanging(string value);
    partial void OnMan_SurnameChanged();
    partial void OnMan_EmailChanging(string value);
    partial void OnMan_EmailChanged();
    partial void OnMan_ContactChanging(string value);
    partial void OnMan_ContactChanged();
    partial void OnMan_PasswordChanging(string value);
    partial void OnMan_PasswordChanged();
    partial void OnMan_ImageChanging(string value);
    partial void OnMan_ImageChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    partial void OnUserTypeChanging(System.Nullable<int> value);
    partial void OnUserTypeChanged();
    #endregion
		
		public Manager()
		{
			this._Merchants = new EntitySet<Merchant>(new Action<Merchant>(this.attach_Merchants), new Action<Merchant>(this.detach_Merchants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Manager_ID
		{
			get
			{
				return this._Manager_ID;
			}
			set
			{
				if ((this._Manager_ID != value))
				{
					this.OnManager_IDChanging(value);
					this.SendPropertyChanging();
					this._Manager_ID = value;
					this.SendPropertyChanged("Manager_ID");
					this.OnManager_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Man_Name", DbType="VarChar(MAX)")]
		public string Man_Name
		{
			get
			{
				return this._Man_Name;
			}
			set
			{
				if ((this._Man_Name != value))
				{
					this.OnMan_NameChanging(value);
					this.SendPropertyChanging();
					this._Man_Name = value;
					this.SendPropertyChanged("Man_Name");
					this.OnMan_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Man_Surname", DbType="VarChar(MAX)")]
		public string Man_Surname
		{
			get
			{
				return this._Man_Surname;
			}
			set
			{
				if ((this._Man_Surname != value))
				{
					this.OnMan_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Man_Surname = value;
					this.SendPropertyChanged("Man_Surname");
					this.OnMan_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Man_Email", DbType="VarChar(MAX)")]
		public string Man_Email
		{
			get
			{
				return this._Man_Email;
			}
			set
			{
				if ((this._Man_Email != value))
				{
					this.OnMan_EmailChanging(value);
					this.SendPropertyChanging();
					this._Man_Email = value;
					this.SendPropertyChanged("Man_Email");
					this.OnMan_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Man_Contact", DbType="VarChar(MAX)")]
		public string Man_Contact
		{
			get
			{
				return this._Man_Contact;
			}
			set
			{
				if ((this._Man_Contact != value))
				{
					this.OnMan_ContactChanging(value);
					this.SendPropertyChanging();
					this._Man_Contact = value;
					this.SendPropertyChanged("Man_Contact");
					this.OnMan_ContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Man_Password", DbType="VarChar(MAX)")]
		public string Man_Password
		{
			get
			{
				return this._Man_Password;
			}
			set
			{
				if ((this._Man_Password != value))
				{
					this.OnMan_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Man_Password = value;
					this.SendPropertyChanged("Man_Password");
					this.OnMan_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Man_Image", DbType="VarChar(MAX)")]
		public string Man_Image
		{
			get
			{
				return this._Man_Image;
			}
			set
			{
				if ((this._Man_Image != value))
				{
					this.OnMan_ImageChanging(value);
					this.SendPropertyChanging();
					this._Man_Image = value;
					this.SendPropertyChanged("Man_Image");
					this.OnMan_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int")]
		public System.Nullable<int> UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manager_Merchant", Storage="_Merchants", ThisKey="Manager_ID", OtherKey="Manager_ID")]
		public EntitySet<Merchant> Merchants
		{
			get
			{
				return this._Merchants;
			}
			set
			{
				this._Merchants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Merchants(Merchant entity)
		{
			this.SendPropertyChanging();
			entity.Manager = this;
		}
		
		private void detach_Merchants(Merchant entity)
		{
			this.SendPropertyChanging();
			entity.Manager = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Merchant")]
	public partial class Merchant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Merchant_ID;
		
		private string _Merch_Name;
		
		private string _Merch_Email;
		
		private string _Merch_Contact;
		
		private string _Merch_Password;
		
		private System.Nullable<int> _IsActive;
		
		private System.Nullable<int> _Merch_Strikes;
		
		private string _Merch_Image;
		
		private System.Nullable<int> _Manager_ID;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<Manager> _Manager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMerchant_IDChanging(int value);
    partial void OnMerchant_IDChanged();
    partial void OnMerch_NameChanging(string value);
    partial void OnMerch_NameChanged();
    partial void OnMerch_EmailChanging(string value);
    partial void OnMerch_EmailChanged();
    partial void OnMerch_ContactChanging(string value);
    partial void OnMerch_ContactChanged();
    partial void OnMerch_PasswordChanging(string value);
    partial void OnMerch_PasswordChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    partial void OnMerch_StrikesChanging(System.Nullable<int> value);
    partial void OnMerch_StrikesChanged();
    partial void OnMerch_ImageChanging(string value);
    partial void OnMerch_ImageChanged();
    partial void OnManager_IDChanging(System.Nullable<int> value);
    partial void OnManager_IDChanged();
    #endregion
		
		public Merchant()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Manager = default(EntityRef<Manager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merchant_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Merchant_ID
		{
			get
			{
				return this._Merchant_ID;
			}
			set
			{
				if ((this._Merchant_ID != value))
				{
					this.OnMerchant_IDChanging(value);
					this.SendPropertyChanging();
					this._Merchant_ID = value;
					this.SendPropertyChanged("Merchant_ID");
					this.OnMerchant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merch_Name", DbType="VarChar(MAX)")]
		public string Merch_Name
		{
			get
			{
				return this._Merch_Name;
			}
			set
			{
				if ((this._Merch_Name != value))
				{
					this.OnMerch_NameChanging(value);
					this.SendPropertyChanging();
					this._Merch_Name = value;
					this.SendPropertyChanged("Merch_Name");
					this.OnMerch_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merch_Email", DbType="VarChar(MAX)")]
		public string Merch_Email
		{
			get
			{
				return this._Merch_Email;
			}
			set
			{
				if ((this._Merch_Email != value))
				{
					this.OnMerch_EmailChanging(value);
					this.SendPropertyChanging();
					this._Merch_Email = value;
					this.SendPropertyChanged("Merch_Email");
					this.OnMerch_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merch_Contact", DbType="VarChar(MAX)")]
		public string Merch_Contact
		{
			get
			{
				return this._Merch_Contact;
			}
			set
			{
				if ((this._Merch_Contact != value))
				{
					this.OnMerch_ContactChanging(value);
					this.SendPropertyChanging();
					this._Merch_Contact = value;
					this.SendPropertyChanged("Merch_Contact");
					this.OnMerch_ContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merch_Password", DbType="VarChar(MAX)")]
		public string Merch_Password
		{
			get
			{
				return this._Merch_Password;
			}
			set
			{
				if ((this._Merch_Password != value))
				{
					this.OnMerch_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Merch_Password = value;
					this.SendPropertyChanged("Merch_Password");
					this.OnMerch_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merch_Strikes", DbType="Int")]
		public System.Nullable<int> Merch_Strikes
		{
			get
			{
				return this._Merch_Strikes;
			}
			set
			{
				if ((this._Merch_Strikes != value))
				{
					this.OnMerch_StrikesChanging(value);
					this.SendPropertyChanging();
					this._Merch_Strikes = value;
					this.SendPropertyChanged("Merch_Strikes");
					this.OnMerch_StrikesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merch_Image", DbType="VarChar(MAX)")]
		public string Merch_Image
		{
			get
			{
				return this._Merch_Image;
			}
			set
			{
				if ((this._Merch_Image != value))
				{
					this.OnMerch_ImageChanging(value);
					this.SendPropertyChanging();
					this._Merch_Image = value;
					this.SendPropertyChanged("Merch_Image");
					this.OnMerch_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_ID", DbType="Int")]
		public System.Nullable<int> Manager_ID
		{
			get
			{
				return this._Manager_ID;
			}
			set
			{
				if ((this._Manager_ID != value))
				{
					if (this._Manager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManager_IDChanging(value);
					this.SendPropertyChanging();
					this._Manager_ID = value;
					this.SendPropertyChanged("Manager_ID");
					this.OnManager_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Merchant_Feedback", Storage="_Feedbacks", ThisKey="Merchant_ID", OtherKey="Merchant_ID")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Merchant_Product", Storage="_Products", ThisKey="Merchant_ID", OtherKey="Merchant_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manager_Merchant", Storage="_Manager", ThisKey="Manager_ID", OtherKey="Manager_ID", IsForeignKey=true)]
		public Manager Manager
		{
			get
			{
				return this._Manager.Entity;
			}
			set
			{
				Manager previousValue = this._Manager.Entity;
				if (((previousValue != value) 
							|| (this._Manager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manager.Entity = null;
						previousValue.Merchants.Remove(this);
					}
					this._Manager.Entity = value;
					if ((value != null))
					{
						value.Merchants.Add(this);
						this._Manager_ID = value.Manager_ID;
					}
					else
					{
						this._Manager_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Manager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Merchant = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Merchant = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Merchant = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Merchant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_ID;
		
		private string _ISBN;
		
		private System.Nullable<int> _Merchant_ID;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _Product_Rating;
		
		private string _Product_Reviews;
		
		private string _Image;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Merchant> _Merchant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnMerchant_IDChanging(System.Nullable<int> value);
    partial void OnMerchant_IDChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnProduct_RatingChanging(System.Nullable<int> value);
    partial void OnProduct_RatingChanged();
    partial void OnProduct_ReviewsChanging(string value);
    partial void OnProduct_ReviewsChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public Product()
		{
			this._Book = default(EntityRef<Book>);
			this._Merchant = default(EntityRef<Merchant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(50)")]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merchant_ID", DbType="Int")]
		public System.Nullable<int> Merchant_ID
		{
			get
			{
				return this._Merchant_ID;
			}
			set
			{
				if ((this._Merchant_ID != value))
				{
					if (this._Merchant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMerchant_IDChanging(value);
					this.SendPropertyChanging();
					this._Merchant_ID = value;
					this.SendPropertyChanged("Merchant_ID");
					this.OnMerchant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Rating", DbType="Int")]
		public System.Nullable<int> Product_Rating
		{
			get
			{
				return this._Product_Rating;
			}
			set
			{
				if ((this._Product_Rating != value))
				{
					this.OnProduct_RatingChanging(value);
					this.SendPropertyChanging();
					this._Product_Rating = value;
					this.SendPropertyChanged("Product_Rating");
					this.OnProduct_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Reviews", DbType="VarChar(MAX)")]
		public string Product_Reviews
		{
			get
			{
				return this._Product_Reviews;
			}
			set
			{
				if ((this._Product_Reviews != value))
				{
					this.OnProduct_ReviewsChanging(value);
					this.SendPropertyChanging();
					this._Product_Reviews = value;
					this.SendPropertyChanged("Product_Reviews");
					this.OnProduct_ReviewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Product", Storage="_Book", ThisKey="ISBN", OtherKey="ISBN", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ISBN = value.ISBN;
					}
					else
					{
						this._ISBN = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Merchant_Product", Storage="_Merchant", ThisKey="Merchant_ID", OtherKey="Merchant_ID", IsForeignKey=true)]
		public Merchant Merchant
		{
			get
			{
				return this._Merchant.Entity;
			}
			set
			{
				Merchant previousValue = this._Merchant.Entity;
				if (((previousValue != value) 
							|| (this._Merchant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Merchant.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Merchant.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Merchant_ID = value.Merchant_ID;
					}
					else
					{
						this._Merchant_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Merchant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quotation")]
	public partial class Quotation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Quote_ID;
		
		private string _ISBN;
		
		private string _Stu_Num;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _Merchant_ID;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuote_IDChanging(int value);
    partial void OnQuote_IDChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnStu_NumChanging(string value);
    partial void OnStu_NumChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnMerchant_IDChanging(System.Nullable<int> value);
    partial void OnMerchant_IDChanged();
    #endregion
		
		public Quotation()
		{
			this._Book = default(EntityRef<Book>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quote_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Quote_ID
		{
			get
			{
				return this._Quote_ID;
			}
			set
			{
				if ((this._Quote_ID != value))
				{
					this.OnQuote_IDChanging(value);
					this.SendPropertyChanging();
					this._Quote_ID = value;
					this.SendPropertyChanged("Quote_ID");
					this.OnQuote_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(50)")]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Num", DbType="VarChar(50)")]
		public string Stu_Num
		{
			get
			{
				return this._Stu_Num;
			}
			set
			{
				if ((this._Stu_Num != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStu_NumChanging(value);
					this.SendPropertyChanging();
					this._Stu_Num = value;
					this.SendPropertyChanged("Stu_Num");
					this.OnStu_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merchant_ID", DbType="Int")]
		public System.Nullable<int> Merchant_ID
		{
			get
			{
				return this._Merchant_ID;
			}
			set
			{
				if ((this._Merchant_ID != value))
				{
					this.OnMerchant_IDChanging(value);
					this.SendPropertyChanging();
					this._Merchant_ID = value;
					this.SendPropertyChanged("Merchant_ID");
					this.OnMerchant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Quotation", Storage="_Book", ThisKey="ISBN", OtherKey="ISBN", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._ISBN = value.ISBN;
					}
					else
					{
						this._ISBN = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Quotation", Storage="_Student", ThisKey="Stu_Num", OtherKey="Stu_Num", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._Stu_Num = value.Stu_Num;
					}
					else
					{
						this._Stu_Num = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Stu_Num;
		
		private string _Stu_Name;
		
		private string _Stu_Surname;
		
		private string _Stu_Contact;
		
		private string _Stu_Email;
		
		private string _Stu_Degree;
		
		private string _Stu_Image;
		
		private string _Stu_Password;
		
		private System.Nullable<int> _IsActive;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Quotation> _Quotations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStu_NumChanging(string value);
    partial void OnStu_NumChanged();
    partial void OnStu_NameChanging(string value);
    partial void OnStu_NameChanged();
    partial void OnStu_SurnameChanging(string value);
    partial void OnStu_SurnameChanged();
    partial void OnStu_ContactChanging(string value);
    partial void OnStu_ContactChanged();
    partial void OnStu_EmailChanging(string value);
    partial void OnStu_EmailChanged();
    partial void OnStu_DegreeChanging(string value);
    partial void OnStu_DegreeChanged();
    partial void OnStu_ImageChanging(string value);
    partial void OnStu_ImageChanged();
    partial void OnStu_PasswordChanging(string value);
    partial void OnStu_PasswordChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Student()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Num", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Stu_Num
		{
			get
			{
				return this._Stu_Num;
			}
			set
			{
				if ((this._Stu_Num != value))
				{
					this.OnStu_NumChanging(value);
					this.SendPropertyChanging();
					this._Stu_Num = value;
					this.SendPropertyChanged("Stu_Num");
					this.OnStu_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Name", DbType="VarChar(MAX)")]
		public string Stu_Name
		{
			get
			{
				return this._Stu_Name;
			}
			set
			{
				if ((this._Stu_Name != value))
				{
					this.OnStu_NameChanging(value);
					this.SendPropertyChanging();
					this._Stu_Name = value;
					this.SendPropertyChanged("Stu_Name");
					this.OnStu_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Surname", DbType="VarChar(MAX)")]
		public string Stu_Surname
		{
			get
			{
				return this._Stu_Surname;
			}
			set
			{
				if ((this._Stu_Surname != value))
				{
					this.OnStu_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Stu_Surname = value;
					this.SendPropertyChanged("Stu_Surname");
					this.OnStu_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Contact", DbType="VarChar(MAX)")]
		public string Stu_Contact
		{
			get
			{
				return this._Stu_Contact;
			}
			set
			{
				if ((this._Stu_Contact != value))
				{
					this.OnStu_ContactChanging(value);
					this.SendPropertyChanging();
					this._Stu_Contact = value;
					this.SendPropertyChanged("Stu_Contact");
					this.OnStu_ContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Email", DbType="VarChar(MAX)")]
		public string Stu_Email
		{
			get
			{
				return this._Stu_Email;
			}
			set
			{
				if ((this._Stu_Email != value))
				{
					this.OnStu_EmailChanging(value);
					this.SendPropertyChanging();
					this._Stu_Email = value;
					this.SendPropertyChanged("Stu_Email");
					this.OnStu_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Degree", DbType="VarChar(MAX)")]
		public string Stu_Degree
		{
			get
			{
				return this._Stu_Degree;
			}
			set
			{
				if ((this._Stu_Degree != value))
				{
					this.OnStu_DegreeChanging(value);
					this.SendPropertyChanging();
					this._Stu_Degree = value;
					this.SendPropertyChanged("Stu_Degree");
					this.OnStu_DegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Image", DbType="VarChar(MAX)")]
		public string Stu_Image
		{
			get
			{
				return this._Stu_Image;
			}
			set
			{
				if ((this._Stu_Image != value))
				{
					this.OnStu_ImageChanging(value);
					this.SendPropertyChanging();
					this._Stu_Image = value;
					this.SendPropertyChanged("Stu_Image");
					this.OnStu_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Password", DbType="VarChar(MAX)")]
		public string Stu_Password
		{
			get
			{
				return this._Stu_Password;
			}
			set
			{
				if ((this._Stu_Password != value))
				{
					this.OnStu_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Stu_Password = value;
					this.SendPropertyChanged("Stu_Password");
					this.OnStu_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Feedback", Storage="_Feedbacks", ThisKey="Stu_Num", OtherKey="Stu_Num")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Quotation", Storage="_Quotations", ThisKey="Stu_Num", OtherKey="Stu_Num")]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
}
#pragma warning restore 1591
